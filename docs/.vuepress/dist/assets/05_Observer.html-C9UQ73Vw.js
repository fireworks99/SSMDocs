import{_ as l,c,b as n,a as o,d as e,w as p,r as i,o as u,e as t}from"./app-CPYlbV70.js";const r={},d={class:"table-of-contents"};function k(v,s){const a=i("router-link");return u(),c("div",null,[s[5]||(s[5]=n("h1",{id:"观察者模式",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#观察者模式"},[n("span",null,"观察者模式")])],-1)),n("nav",d,[n("ul",null,[n("li",null,[e(a,{to:"#被观察者"},{default:p(()=>s[0]||(s[0]=[t("被观察者")])),_:1})]),n("li",null,[e(a,{to:"#观察者1"},{default:p(()=>s[1]||(s[1]=[t("观察者1")])),_:1})]),n("li",null,[e(a,{to:"#观察者2"},{default:p(()=>s[2]||(s[2]=[t("观察者2")])),_:1})]),n("li",null,[e(a,{to:"#主程序"},{default:p(()=>s[3]||(s[3]=[t("主程序")])),_:1})]),n("li",null,[e(a,{to:"#总结"},{default:p(()=>s[4]||(s[4]=[t("总结")])),_:1})])])]),s[6]||(s[6]=o(`<h2 id="被观察者" tabindex="-1"><a class="header-anchor" href="#被观察者"><span>被观察者</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>learn<span class="token punctuation">.</span>ssm<span class="token punctuation">.</span>chapter2<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>observer</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Observable</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Observer</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProductList</span> <span class="token keyword">extends</span> <span class="token class-name">Observable</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> products <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token comment">//产品列表</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">ProductList</span> instance<span class="token punctuation">;</span><span class="token comment">//此类的唯一实例(这里体现了单例模式)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">ProductList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment">//构建方法私有化(不能在外部任意new实例，保证了单例)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// get唯一实例</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ProductList</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span>instance <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProductList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            instance<span class="token punctuation">.</span>products <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">return</span> instance<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 增加一个观察者</span></span>
<span class="line">    <span class="token comment">// Observable.addObserver(Observer observer)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 被观察者发生更新</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addProduct</span><span class="token punctuation">(</span><span class="token class-name">String</span> newProduct<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        products<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>newProduct<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;产品列表新增了产品：&quot;</span> <span class="token operator">+</span> newProduct<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token doc-comment comment">/**</span>
<span class="line">         * 告知观察者当前被观察者发生了变化</span>
<span class="line">         * Java的Observable类的notifyObservers方法会检查一个布尔值changed，</span>
<span class="line">         * setChanged()就是把这个值设为true的。</span>
<span class="line">         */</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token doc-comment comment">/**</span>
<span class="line">         * 检查changed变量，如果为true，</span>
<span class="line">         * 则遍历所有通过 addObserver(...) 注册进来的观察者，</span>
<span class="line">         * 然后调用它们的 update(...) 方法，并把 newProduct 作为参数传给它们。</span>
<span class="line">         * 调用clearChanged将changed置为false</span>
<span class="line">         */</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notifyObservers</span><span class="token punctuation">(</span>newProduct<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="观察者1" tabindex="-1"><a class="header-anchor" href="#观察者1"><span>观察者1</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>learn<span class="token punctuation">.</span>ssm<span class="token punctuation">.</span>chapter2<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>observer</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Observable</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Observer</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TaoBaoObserver</span> <span class="token keyword">implements</span> <span class="token class-name">Observer</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">Observable</span> o<span class="token punctuation">,</span> <span class="token class-name">Object</span> product<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">String</span> newProduct <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> product<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;发送新产品【&quot;</span> <span class="token operator">+</span> newProduct <span class="token operator">+</span> <span class="token string">&quot;】同步到淘宝商城&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="观察者2" tabindex="-1"><a class="header-anchor" href="#观察者2"><span>观察者2</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>learn<span class="token punctuation">.</span>ssm<span class="token punctuation">.</span>chapter2<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>observer</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Observable</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Observer</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JingDongObserver</span> <span class="token keyword">implements</span> <span class="token class-name">Observer</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token class-name">Observable</span> o<span class="token punctuation">,</span> <span class="token class-name">Object</span> product<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">String</span> newProduct <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> product<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;发送新产品【&quot;</span> <span class="token operator">+</span> newProduct <span class="token operator">+</span> <span class="token string">&quot;】同步到京东商城&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="主程序" tabindex="-1"><a class="header-anchor" href="#主程序"><span>主程序</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>learn<span class="token punctuation">.</span>ssm<span class="token punctuation">.</span>chapter2<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>observer</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">ProductList</span> observable <span class="token operator">=</span> <span class="token class-name">ProductList</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">TaoBaoObserver</span> taoBaoObserver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TaoBaoObserver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        observable<span class="token punctuation">.</span><span class="token function">addObserver</span><span class="token punctuation">(</span>taoBaoObserver<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">JingDongObserver</span> jingDongObserver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JingDongObserver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        observable<span class="token punctuation">.</span><span class="token function">addObserver</span><span class="token punctuation">(</span>jingDongObserver<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        observable<span class="token punctuation">.</span><span class="token function">addProduct</span><span class="token punctuation">(</span><span class="token string">&quot;RedMi Note9 Pro&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token doc-comment comment">/**</span>
<span class="line">         * 产品列表新增了产品：RedMi Note9 Pro</span>
<span class="line">         * 发送新产品【RedMi Note9 Pro】同步到京东商城</span>
<span class="line">         * 发送新产品【RedMi Note9 Pro】同步到淘宝商城</span>
<span class="line">         */</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>观察者模式像订阅公众号一样：</p><p><strong>没有观察者模式：</strong></p><ul><li>你每天主动去检查喜欢的公众号有没有更新</li><li>你要记住所有你关注的公众号</li><li>有时候忘了检查，就错过重要消息</li><li><strong>太累了，需要主动去问</strong></li></ul><p><strong>有观察者模式：</strong></p><ul><li>你点击&quot;关注&quot;按钮</li><li>然后就不用管了</li><li>公众号一发新文章，自动推送到你微信</li><li><strong>你不用主动去问，消息自动来找你</strong></li></ul><blockquote><p><strong>让被观察者（公众号）在状态变化时，自动通知所有观察者（粉丝），观察者不用主动去查询状态变化</strong></p></blockquote>`,15))])}const b=l(r,[["render",k]]),g=JSON.parse(`{"path":"/post/05_Observer.html","title":"观察者模式","lang":"zh-CN","frontmatter":{"title":"观察者模式","lang":"zh-CN","author":"fireworks99","date":"2025-04-18"},"headers":[{"level":2,"title":"被观察者","slug":"被观察者","link":"#被观察者","children":[]},{"level":2,"title":"观察者1","slug":"观察者1","link":"#观察者1","children":[]},{"level":2,"title":"观察者2","slug":"观察者2","link":"#观察者2","children":[]},{"level":2,"title":"主程序","slug":"主程序","link":"#主程序","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"updatedTime":1760601950000,"contributors":[{"name":"fireworks99","username":"fireworks99","email":"46671672+fireworks99@users.noreply.github.com","commits":2,"url":"https://github.com/fireworks99"}],"changelog":[{"hash":"c16da419fcbcd6bbf5cceb621999cd2521ea522a","time":1760601950000,"email":"46671672+fireworks99@users.noreply.github.com","author":"fireworks99","message":"'总结'"},{"hash":"2222baa47c74da8e8ac44ac0600f4fd1e6d0d7ec","time":1744965496000,"email":"46671672+fireworks99@users.noreply.github.com","author":"fireworks99","message":"update factory"}]},"filePathRelative":"post/05_Observer.md"}`);export{b as comp,g as data};
